// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoticiasWebApi;

namespace ProyectoVinowWebApi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20200330223244_Modelos")]
    partial class Modelos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Ajuste", b =>
                {
                    b.Property<int>("idAjuste")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreAjuste")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasMaxLength(50);

                    b.Property<float>("valor")
                        .HasColumnName("Valor")
                        .HasColumnType("float")
                        .HasMaxLength(13);

                    b.HasKey("idAjuste");

                    b.ToTable("ajuste");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Barrio", b =>
                {
                    b.Property<int>("idBarrio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idMunicipio")
                        .HasColumnName("idMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("nombreBarerio")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("idBarrio");

                    b.HasIndex("idMunicipio");

                    b.ToTable("barrio");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Canjeo", b =>
                {
                    b.Property<int>("idCanjeo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("direccionidDireccion");

                    b.Property<DateTime>("fechaCanjeo")
                        .HasColumnName("Fecha_Canjeo")
                        .HasColumnType("datetime");

                    b.Property<int>("idDirecion")
                        .HasColumnName("idDireccion")
                        .HasColumnType("int");

                    b.Property<int>("puntosCajeados")
                        .HasColumnName("Puntos_Canjeados")
                        .HasColumnType("int");

                    b.Property<double>("valorEnDinero")
                        .HasColumnName("Valor_En_Dinero")
                        .HasColumnType("float");

                    b.HasKey("idCanjeo");

                    b.HasIndex("direccionidDireccion");

                    b.ToTable("canjeo");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnName("Apellidos")
                        .HasMaxLength(50);

                    b.Property<string>("identidad")
                        .IsRequired()
                        .HasColumnName("Identidad")
                        .HasMaxLength(13);

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnName("Nombres")
                        .HasMaxLength(50);

                    b.Property<string>("telefono")
                        .HasColumnName("Telefono")
                        .HasMaxLength(8);

                    b.HasKey("idCliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Departamento", b =>
                {
                    b.Property<int>("idDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigoDepartamento")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasMaxLength(13);

                    b.Property<string>("nombreDepartamento")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("idDepartamento");

                    b.ToTable("departamento");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Direccion", b =>
                {
                    b.Property<int>("idDireccion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idBarrio")
                        .HasColumnName("idBarrio")
                        .HasColumnType("int");

                    b.Property<int>("idCliente")
                        .HasColumnName("idCliente")
                        .HasColumnType("int");

                    b.Property<string>("referencia")
                        .IsRequired()
                        .HasColumnName("Refererncia")
                        .HasMaxLength(700);

                    b.HasKey("idDireccion");

                    b.HasIndex("idBarrio");

                    b.HasIndex("idCliente");

                    b.ToTable("direccion");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Municipio", b =>
                {
                    b.Property<int>("idMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigoMunicipio")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasMaxLength(13);

                    b.Property<int>("idDepartamento")
                        .HasColumnName("idDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("nombreMunicipio")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("idMunicipio");

                    b.HasIndex("idDepartamento");

                    b.ToTable("municipio");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Puntos", b =>
                {
                    b.Property<int>("idPuntos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idDireccion")
                        .HasColumnName("idDireccion")
                        .HasColumnType("int");

                    b.Property<int>("puntos")
                        .HasColumnName("Puntos")
                        .HasColumnType("int");

                    b.HasKey("idPuntos");

                    b.HasIndex("idDireccion");

                    b.ToTable("puntos");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Recipiente", b =>
                {
                    b.Property<int>("idRecipiente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idTipoRecipiente")
                        .HasColumnName("idTipoRecipiente")
                        .HasColumnType("int");

                    b.Property<string>("nombreRecipiente")
                        .IsRequired()
                        .HasColumnName("Recipiente")
                        .HasMaxLength(70);

                    b.HasKey("idRecipiente");

                    b.HasIndex("idTipoRecipiente");

                    b.ToTable("recipiente");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Recoleccion", b =>
                {
                    b.Property<int>("idRecoleccion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnName("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("estaClasificada")
                        .HasColumnName("Estado_Clasificacion")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaRecoleccion")
                        .HasColumnName("Fecha_Recoleccion")
                        .HasColumnType("datetime");

                    b.Property<int>("idRecipiente")
                        .HasColumnName("idRecipiente")
                        .HasColumnType("int");

                    b.HasKey("idRecoleccion");

                    b.HasIndex("idRecipiente");

                    b.ToTable("recoleccion");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.tipoRecipiente", b =>
                {
                    b.Property<int>("idTipoRecipiente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreRecipiente")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("idTipoRecipiente");

                    b.ToTable("TipoRecipiente");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Barrio", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.Municipio", "municipio")
                        .WithMany()
                        .HasForeignKey("idMunicipio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Canjeo", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.Direccion", "direccion")
                        .WithMany()
                        .HasForeignKey("direccionidDireccion");
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Direccion", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.Barrio", "barrio")
                        .WithMany()
                        .HasForeignKey("idBarrio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoVinowWebApi.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Municipio", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.Departamento", "departamento")
                        .WithMany()
                        .HasForeignKey("idDepartamento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Puntos", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("idDireccion")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Recipiente", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.tipoRecipiente", "TipoRecipiente")
                        .WithMany()
                        .HasForeignKey("idTipoRecipiente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoVinowWebApi.Models.Recoleccion", b =>
                {
                    b.HasOne("ProyectoVinowWebApi.Models.Recipiente", "recipiente")
                        .WithMany()
                        .HasForeignKey("idRecipiente")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
